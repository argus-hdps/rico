"""Add placeholder hardware models

Revision ID: e27352687ae5
Revises: 8d8176be0c8e
Create Date: 2024-03-13 22:23:39.866474+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "e27352687ae5"
down_revision: Union[str, None] = "8d8176be0c8e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "camera_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("manufacturer", sa.String(length=30), nullable=True),
        sa.Column("model", sa.String(length=16), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "focuser",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("dynamixel_addr", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "throughput",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("descriptor", sa.String(length=128), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "camera",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["camera_model.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "filter_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("manufacturer", sa.String(length=30), nullable=True),
        sa.Column("throughput_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["throughput_id"],
            ["throughput.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "spectral_throughput",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("wavelength_nm", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("efficiency", sa.Numeric(precision=10, scale=7), nullable=True),
        sa.Column("throughput_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["throughput_id"],
            ["throughput.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "telescope_model",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("manufacturer", sa.String(length=30), nullable=True),
        sa.Column("model", sa.String(length=16), nullable=True),
        sa.Column("revision", sa.String(length=5), nullable=True),
        sa.Column("aperture_mm", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("focal_length_mm", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("throughput_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["throughput_id"],
            ["throughput.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "telescope",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("model_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model_id"],
            ["telescope_model.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.drop_table("dev_gonogo")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dev_gonogo",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("is_devel", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="dev_gonogo_pkey"),
    )
    op.drop_table("telescope")
    op.drop_table("telescope_model")
    op.drop_table("spectral_throughput")
    op.drop_table("filter_model")
    op.drop_table("camera")
    op.drop_table("throughput")
    op.drop_table("focuser")
    op.drop_table("camera_model")
    # ### end Alembic commands ###
