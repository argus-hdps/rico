"""add climate control models

Revision ID: 212402a07765
Revises: e218632eebc6
Create Date: 2024-03-18 18:21:29.191355+00:00

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "212402a07765"
down_revision: Union[str, None] = "e218632eebc6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "boltwood_report",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("epoch", sa.DateTime(), nullable=False),
        sa.Column(
            "wind_hotwire_tempC", sa.Numeric(precision=5, scale=2), nullable=True
        ),
        sa.Column(
            "wind_coldwire_tempC", sa.Numeric(precision=5, scale=2), nullable=True
        ),
        sa.Column("wind_speed_kmh", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("pressure_hpa", sa.Numeric(precision=6, scale=2), nullable=True),
        sa.Column("pressure_tempC", sa.Numeric(precision=4, scale=2), nullable=True),
        sa.Column("ambient_tempC", sa.Numeric(precision=4, scale=2), nullable=True),
        sa.Column("station_voltage", sa.Numeric(precision=4, scale=2), nullable=True),
        sa.Column("daylight", sa.Numeric(precision=3, scale=0), nullable=True),
        sa.Column("sky_tempC", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("case_tempC", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("rain_raw", sa.Numeric(precision=8, scale=2), nullable=True),
        sa.Column("rain_dpm", sa.Numeric(precision=8, scale=2), nullable=True),
        sa.Column("humidity", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("humidity_tempC", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("dewpointC", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("firmware_version", sa.String(length=5), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "instrument",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=16), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "pathfinder_hvac",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("epoch", sa.DateTime(), nullable=False),
        sa.Column("south_low_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("south_west_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("south_east_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("north_low_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("north_west_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("north_east_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cupola_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("supply_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("exhaust_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_sw_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_w_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_nw_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_cs_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_cn_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_se_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_e_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("cradle_ne_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("wall_se_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("wall_ne_tempC", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("humidity_se", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("humidity_ne", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.Column("humidity_sm", sa.Numeric(precision=4, scale=1), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "ocular_unit",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("telescope_id", sa.Integer(), nullable=True),
        sa.Column("focuser_id", sa.Integer(), nullable=True),
        sa.Column("camera_id", sa.Integer(), nullable=True),
        sa.Column("filter_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["camera_id"],
            ["camera.id"],
        ),
        sa.ForeignKeyConstraint(
            ["filter_id"],
            ["filter_model.id"],
        ),
        sa.ForeignKeyConstraint(
            ["focuser_id"],
            ["focuser.id"],
        ),
        sa.ForeignKeyConstraint(
            ["telescope_id"],
            ["telescope.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.alter_column(
        "camera", "serial", existing_type=sa.VARCHAR(length=12), nullable=False
    )
    op.create_unique_constraint(None, "camera", ["serial"])
    op.alter_column(
        "camera_model", "model", existing_type=sa.VARCHAR(length=16), nullable=False
    )
    op.create_unique_constraint(None, "camera_model", ["model"])
    op.alter_column(
        "filter_model",
        "name",
        existing_type=sa.VARCHAR(length=4),
        type_=sa.String(length=5),
        nullable=False,
    )
    op.create_unique_constraint(None, "filter_model", ["name"])
    op.create_unique_constraint(None, "focuser", ["dynamixel_addr"])
    op.alter_column(
        "telescope", "serial", existing_type=sa.VARCHAR(length=12), nullable=False
    )
    op.create_unique_constraint(None, "telescope", ["serial"])
    op.alter_column(
        "telescope_model", "model", existing_type=sa.VARCHAR(length=16), nullable=False
    )
    op.alter_column(
        "telescope_model",
        "revision",
        existing_type=sa.VARCHAR(length=5),
        nullable=False,
    )
    op.create_unique_constraint(None, "telescope_model", ["model"])
    op.create_unique_constraint(None, "telescope_model", ["revision"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "telescope_model", type_="unique")
    op.drop_constraint(None, "telescope_model", type_="unique")
    op.alter_column(
        "telescope_model", "revision", existing_type=sa.VARCHAR(length=5), nullable=True
    )
    op.alter_column(
        "telescope_model", "model", existing_type=sa.VARCHAR(length=16), nullable=True
    )
    op.drop_constraint(None, "telescope", type_="unique")
    op.alter_column(
        "telescope", "serial", existing_type=sa.VARCHAR(length=12), nullable=True
    )
    op.drop_constraint(None, "focuser", type_="unique")
    op.drop_constraint(None, "filter_model", type_="unique")
    op.alter_column(
        "filter_model",
        "name",
        existing_type=sa.String(length=5),
        type_=sa.VARCHAR(length=4),
        nullable=True,
    )
    op.drop_constraint(None, "camera_model", type_="unique")
    op.alter_column(
        "camera_model", "model", existing_type=sa.VARCHAR(length=16), nullable=True
    )
    op.drop_constraint(None, "camera", type_="unique")
    op.alter_column(
        "camera", "serial", existing_type=sa.VARCHAR(length=12), nullable=True
    )
    op.drop_table("ocular_unit")
    op.drop_table("pathfinder_hvac")
    op.drop_table("instrument")
    op.drop_table("boltwood_report")
    # ### end Alembic commands ###
